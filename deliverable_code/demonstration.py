from path_planner import plan_path
import numpy as np
from matplotlib import pyplot as plt
import time
import params

def get_bearing_size_measurements(filepath):
    data = np.load(filepath)
    bearings = [[] for _ in range(data.shape[1])]
    sizes = [[] for _ in range(data.shape[1])]
    for i in range(params.measured_window):
        for j in range(data.shape[1]):
            bearings[j].append(data[i][j,0])
            sizes[j].append(data[i][j,1])
    return bearings, sizes

def get_ownship_intruder_positions(filepath):
    real = np.load(filepath)
    ownship = real[0]
    intruders = []
    for intruder in real[1:]:
        intruders.append(intruder)
    return ownship, intruders

def plot_control_points(cntrl_pts):
    for i in range(0, len(cntrl_pts), 2):
        plt.plot(cntrl_pts[i+1], cntrl_pts[i], 'ko')
    
    plt.axis('equal')
    plt.show()


# Example usage of the path planner
# bearings, sizes = get_bearing_size_measurements("deliverable_code/xplane_data/0005/20241205_153033_bearing_info.npy")
# ownship, intruders = get_ownship_intruder_positions("deliverable_code/xplane_data/0005/20241205_153033_all_positions_in_path.npy")
# bearings = np.array([[0.29155565775745285, 0.2914593114585339, 0.2912552394692298, 0.29111767825799095, 0.2909223733776699, 0.29074409127280254, 0.29062900473161746, 0.2903851230430035, 0.29018950121221626, 0.29003796961565104, 0.2898943187556561, 0.2896954586278995, 0.28944044948184644, 0.2891727337610854, 0.2889756718023907, 0.2887323963935218, 0.2884565994787635, 0.28824519909444146, 0.2879755136342363, 0.2876381252672007, 0.28748919636583337, 0.2871959489962756, 0.2869311355633265, 0.28666723266263294, 0.2861910113947065, 0.2859867700159876, 0.2855498267925986, 0.2851409459193159, 0.28484655197270026, 0.2844320512753471]])
# sizes = np.array([[0.009483780532323119, 0.009557141129257408, 0.009626017375171379, 0.009684288673678078, 0.009764706352449554, 0.009830678096741933, 0.0098984823152694, 0.009988695579968324, 0.010058750309571034, 0.010146556061082567, 0.010208163597772709, 0.01029211320812365, 0.010373082022593858, 0.010468838399228748, 0.010540070773380008, 0.010631904248875246, 0.010716037391215301, 0.01080263468533703, 0.010885790029059613, 0.010992568864778427, 0.011056052226472374, 0.01116862345469787, 0.01125103673623278, 0.011333362750674226, 0.01146269402328619, 0.011535864605560093, 0.011646077317457783, 0.011765624080267068, 0.011854425800818578, 0.011976788268715956]])
# ownship = np.array([[-0.1471664471837837, 229.2655761315117], [-0.14716806842481223, 229.32920041788384], [-0.14716899535538897, 229.36555715504318], [-0.1471715440515391, 229.46553818152864], [-0.14717247150707546, 229.50189491365734], [-0.14717409464072073, 229.56551920187366], [-0.1471761819716182, 229.64732185823107], [-0.14717826944064516, 229.72912451498829], [-0.14717966222654955, 229.78365961710222], [-0.14718082307595814, 229.8291055386993], [-0.1471833774641027, 229.92908655985622], [-0.14718477112724404, 229.98362166269234], [-0.1471863970307412, 230.04724595347494], [-0.1471884892177222, 230.12904860753528], [-0.1471894190700187, 230.16540534478438], [-0.1471919772917829, 230.26538636795274], [-0.1471931400755615, 230.310832287163], [-0.14719523415515123, 230.3926349430675], [-0.14719663096122915, 230.4471700459158], [-0.14719919194619102, 230.5471510690964], [-0.14719919194619102, 230.5471510690964], [-0.14720175418814208, 230.64713209299913], [-0.14720385094784927, 230.7289347493932], [-0.147204783853355, 230.7652914845778], [-0.1472068823608721, 230.84709413986207], [-0.14720898110999947, 230.92889679474655], [-0.1472106136023097, 230.9925207238942], [-0.14721201373785497, 231.04705582547768], [-0.1472136478473116, 231.11068011237614], [-0.14721621654794959, 231.21066113790266]])
# print(bearings)

bearings = np.array([[0.28020896078238144, 0.2799791634340273, 0.27985082223165036, 0.27968996381688405, 0.27947625876641935, 0.27931787960161847, 0.2791150402730225, 0.278897261573214, 0.27870705102046944, 0.2785449281445034, 0.2783997580509071, 0.27829731996932866, 0.27818079117319133, 0.27795992886320364, 0.2778182349057108, 0.277805687440152, 0.27773960463929515, 0.27754367631804155, 0.27742962613866234, 0.2772501482750938, 0.2770708985137965, 0.27690225201950847, 0.27681030042090066, 0.2766036503630187, 0.2764845418626789, 0.2764782734220404, 0.27624204251905127, 0.27610704628655997, 0.2759393380109955, 0.2758987818224863]]
)
sizes = np.array([[0.009496282089386665, 0.009574632231148192, 0.00962756772135639, 0.009709011706275139, 0.009788933026311454, 0.00985026420440585, 0.009932543101471666, 0.010007086423491265, 0.01007853833288488, 0.01014672173349462, 0.01022678973535629, 0.010328775644414985, 0.010379460581232952, 0.010481171790042739, 0.010569914522393916, 0.010633402012672542, 0.010725921420591844, 0.010833461121554673, 0.010908778274938113, 0.011017529883769318, 0.01111077030030292, 0.011202994575600578, 0.011296640723948141, 0.011400064176255434, 0.011483606238144744, 0.011597216393898407, 0.011710565066655996, 0.011800202601299454, 0.011917476207465118, 0.01200444554086433]]
)
ownship = np.array([[-4.474420103384169e-05, 28.37636793986921], [-4.488707391167579e-05, 28.421813755668445], [-4.5146191737649444e-05, 28.503616226479984], [-4.531968525106622e-05, 28.558151209553326], [-4.569533137807613e-05, 28.676310330746368], [-4.589797440524013e-05, 28.7399344750187], [-4.6014081214990066e-05, 28.77629112963117], [-4.627652213207156e-05, 28.858093641224265], [-4.653938385479339e-05, 28.93989611197051], [-4.686105541623631e-05, 29.039876910945058], [-4.692015526600035e-05, 29.058055237096646], [-4.7390654238671504e-05, 29.203481850217997], [-4.7390654238671504e-05, 29.203481850217997], [-4.771551714241595e-05, 29.303462647527894], [-4.789340391850305e-05, 29.357997628781536], [-4.822068439627736e-05, 29.45797842290494], [-4.869726923500961e-05, 29.603405084804642], [-4.88764960697996e-05, 29.65794006630308], [-4.902745770218875e-05, 29.703385881894196], [-4.920727883817033e-05, 29.757920860761022], [-4.935702481595472e-05, 29.803366679383586], [-4.9749677284188776e-05, 29.921525802559426], [-5.002196782105672e-05, 30.003328273342344], [-5.0143206990233e-05, 30.039684926457426], [-5.035639794592761e-05, 30.103309115689214], [-5.087448256763105e-05, 30.257824894313874], [-5.093552343629626e-05, 30.276003220632735], [-5.115005418038221e-05, 30.33962736550886], [-5.148710908942089e-05, 30.43960816286765], [-5.176434544248987e-05, 30.52141063343023]]
)

start = time.time()
cntrl_pts = plan_path(bearings, sizes, ownship, 1, params.safety_threshold)
print(cntrl_pts)
end = time.time()
print("\nTime taken to plan path: ", end - start, " seconds\n")
plot_control_points(cntrl_pts)



